Motorola DSP56000 Macro Cross Assembler  Version 2.03  89-08-04  15:59:03  intioevb.asm  Page 1



1                        ;************************************************************
2                        ; file:intioevb.asm                                         *
3                        ;                                                           *
4                        ; SSI Interrupt handler example for the DSP56ADC16 EVB        *
5                        ;                                                           *
6                        ;************************************************************
7                        ; Written by C.D.T.     10/31/88        Rev. 1.0 11/1/88
8      
9                                  page    132
10     
11                       ; Program start address
12     
13        P:0040                   org     p:$40
14     
15                       ; Initialize IPR to allow interrupts to occur
16     
17        P:0040 08F4BF            movep             #$3000,x:$FFFF          ;allow all interrupts
                 003000
18     
19                       ; Set up ADS board in case of force break instead of force reset
20     
21        P:0042 08F4BE            movep             #0,x:$FFFE              ;set bcr to zero
                 000000
22        P:0044 0501BB            movec             #1,sp                   ;init stack pointer
23        P:0045 0500B9            movec             #0,sr                   ;clear loop flag/interrupt mask bits
24     
25                       ; Set up the SSI for operation with the DSP56ADC16EVB
26                       ; The following code sets port C to function as SCI/SSI
27     
28        P:0046 280000            move              #$0,a0                  ;zero PCC to cycle it
29        P:0047 08C821            movep             a0,x:$FFE1
30     
31        P:0048 50F400            move              #$0001ff,a0
                 0001FF
32        P:004A 08C821            movep             a0,x:$FFE1              ;write PCC
33     
34                       ; The following code sets the SSI CRA and CRB control registers for external
35                       ; cont. synchronous clock, normal mode.
36     
37        P:004B 50F400            move              #$004000,a0             ;CRA pattern for word length=16 bits
                 004000
38        P:004D 08C82C            movep             a0,x:$FFEC
39     
40        P:004E 50F400            move              #$00B200,a0             ;CRB pattern for cont. ck,sych,normal mode
                 00B200
41        P:0050 08C82D            movep             a0,x:$FFED              ;word long frame sync, RX interrupts enab.,
42                                                                           ;external clock and frame sync
43     
44                       ; Sample rate is controlled by DSP56ADC16 board.   
45     
46        P:0051 0C0051  self      jmp     self                              ;looping waiting for interrupt
47     
48     
49                       ;********************************************
50                       ; Interrupt Routine- Read A/D and write D/A *
51                       ;********************************************
52     
53                       ; The following code reads the A/D data from the SSI RX register
54                       ; and writes the data to the SSI TX register. Since SSI TX and RX
55                       ; operate synchronously the TX empty flag need not be checked.  TX 
56                       ; is guaranteed to be empty due to reception of new A/D word.
57                       ; The user may wish to substitute custom I/O routines such as FIFO buffer
Motorola DSP56000 Macro Cross Assembler  Version 2.03  89-08-04  15:59:03  intioevb.asm  Page 2



58                       ; service routines etc.
59     
60        P:0052 084E2F  rdwrite   movep             x:$FFEF,a               ;read SSI RX reg. for A/D data
61        P:0053 08CE2F            movep             a,x:$FFEF               ;write to SSI TX reg. for D/A
62        P:0054 000004            rti
63     
64                       ;***************************************************************
65                       ; Interrupt exception handlers for SSI RX-TX overrun/underrun  *
66                       ;***************************************************************
67     
68                       ; The following clears the exception flag for the SSI transmitter and returns
69     
70        P:0055 08482E  txcept    movep             X:$FFEE,A0              ;read status
71        P:0056 08CC2F            movep             a1,X:$FFEF              ;send something         
72        P:0057 000000            nop                                       ;place a BREAKPOINT here
73        P:0058 000004            rti                                       ; for debugging exceptions
74     
75                       ; The following clears the exception flag for the SSI receiver and returns
76     
77        P:0059 08482E  rxcept    movep             X:$FFEE,A0              ;read status
78        P:005A 084C2F            movep             X:$FFEF,a1              ;receive something
79        P:005B 000000            nop                                       ;place a BREAKPOINT here
80        P:005C 000004            rti                                       ;for debugging exceptions
81     
82                       ;**************************************************************
83                       ; Set up JSR's at the interrupt addresses for SSI interrupts  *
84                       ;**************************************************************
85     
86        P:000C                   org     p:$000C                           ;SSI handler address
87        P:000C 0D0052            jsr     rdwrite                           ;go handle SSI I/O
88     
89        P:000E                   org     p:$000e                           ;SSI exception vector-receive
90        P:000E 0D0059            jsr     rxcept
91     
92        P:0012                   org     p:$0012                           ;SSI exception vector-transmit
93        P:0012 0D0055            jsr     txcept
94     
95                                 end
0    Errors
0    Warnings






















