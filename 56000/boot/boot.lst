


Motorola DSP56000 Assembler  Version 3.1.12  91-12-16  13:55:22  boot.asm  Page 1



1                        ;*****************************************************************************
2                        ;  This routine demonstrates how to construct a module which will boot
3                        ;  from an external byte-wide EPROM and execute in on-chip Program RAM.
4                        ;
5                        ;  The main routine simply toggles the least significant bit of Port-C
6                        ;  and this activity can be monitored externally with an oscilloscope
7                        ;  to confirm that the boot occurred correctly.
8                        ;
9                        ;  assemble this routine with the following command line:
10                       ;     asm56000 -a -b -l boot
11                       ;
12                       ;  build the S-Record file for use by the PROM-Burner via the SREC utility:
13                       ;     SREC boot
14                       ;
15                       ;  The vectors will be placed into the EPROM at address $C000 and the 
16                       ;  main routine will start at $C0F0 in the EPROM. 
17                       ;*****************************************************************************
18        00FFE1         m_pcc     equ     $FFE1                             ;Port-C control register address (in X:)
19        00FFE3         m_pcddr   equ     $FFE3                             ;Port-C data direction register
20        00FFE5         m_pcd     equ     $FFE5                             ;Port-C data register
21        000050         main      equ     $50                               ;main routine starting address
22        000000         RUNTIME   equ     0                                 ;bootstrap into P:0
23        00C000         LOADTIME  equ     $C000                             ;load into EPROM at P:$C000
24     
25                                 page    132,66,3,3                        ;format the page for 132 columns, 66 lines
26     
27     
28        P:0000 P:C000                   org     P:RUNTIME,P:LOADTIME
29        P:0000 P:C000 0D0050            jsr     <GO_1                             ;RESET Vector...start program
30        P:0001 P:C001 000000            nop                                       ;...vectors have 2 words...
31     
32                                        DUP     62                                ;define unused vectors with
33   m                                    nop                                       ;..."safe" default routine
34   m                                    nop
35   m                                    ENDM
160    
161    
162       P:0050 P:C0F0                   org     P:main,P:LOADTIME+(3*main)
163                             GO_1
164                                                                                 ;**** simple routine to toggle I/O pin ****
165       P:0050 P:C0F0 08F4A3            movep             #$0001,x:m_pcddr        ;only lsb of Port-C will be an output
                        000001
166       P:0052 P:C0F2 08F4A1            movep             #$0000,x:m_pcc          ;all Port-C pins will be G.P. I/O
                        000000
167                             _loop
168       P:0054 P:C0F4 0BA500            bchg    #0,x:m_pcd                        ;toggle the lsb of Port-C
169       P:0055 P:C0F5 0C0054            jmp     <_loop
170    
171       000056                CodeSize  set     *
172    
173                             ;
174                             ;    test to see if the code size exceeds the available on-chip resources
175                             ;           (512 words in on-chip P:RAM)
176                             ;
177                                       IF      CodeSize>$1FF
181                                       ENDIF






Motorola DSP56000 Assembler  Version 3.1.12  91-12-16  13:55:22  boot.asm  Page 2



182    
183                                       END

0    Errors
0    Warnings






















































